server:
  port: ${SERVER_PORT:8082}
grpc:
  server:
    port: ${GRPC_PORT:18082}
  client:
    products-service:
      address: ${PRODUCTS_SERVICE_URI:static://localhost:18081}
      negotiationType: plaintext
    payment-service:
      address: ${PAYMENT_SERVICE_URI:static://localhost:18084}
      negotiationType: plaintext
    users-service:
      address: ${USERS_SERVICE_URI:static://localhost:18085}
      negotiationType: plaintext
    shops-service:
      address: ${SHOPS_SERVICE_URI:static://localhost:18086}
      negotiationType: plaintext



spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    enabled: "true"
    url: ${DB_URL:jdbc:postgresql://ep-tight-glitter-a17vbx2k-pooler.ap-southeast-1.aws.neon.tech/ecommerce-go-users?sslmode=require}
    username: ${DB_USER:neondb_owner}
    password: ${DB_PASSWORD:npg_ARFzU8NZupg7}
    driver-class-name: org.postgresql.Driver
    connection-pool:
      max-connection: 10
      min-connection: 2
      max-connection-idle-time: 300000
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update  
    show-sql: true
  data:
    redis:
      enabled: "true"
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      username: ${REDIS_USERNAME:default} 
      database: 0
      connection-pool-size: ${REDIS_CONNECTION_POOL_SIZE:5}
      connection-minimun-idle-size: ${REDIS_CONNECTION_MINIMUM_IDLE_SIZE:2}
      idle-connection-timeout: 10000
  rabbitmq:
    enabled: "true"
    uri: ${RABBITMQ_URI}
springdoc:
  info:
    title: "Orders service"
    description: "Orders service"
    version: "v1.0.0"
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs
    
  